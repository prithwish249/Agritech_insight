{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\n// src/components/Weather.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check if geolocation is available in the browser\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          // Fetch weather data using the obtained coordinates\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=37de03beb6dc52637277cae0f8a8dfe1`);\n          if (!response.ok) {\n            throw new Error('Weather data request failed');\n          }\n          const data = await response.json();\n\n          // Check if the expected properties exist in the response\n          if (!data.name || !data.sys || !data.weather || !data.main || !data.wind) {\n            throw new Error('Weather data structure is incomplete');\n          }\n          setWeatherData(data);\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching or processing weather data:', error);\n          setError('Failed to fetch weather data.');\n          setLoading(false);\n        }\n      }, error => {\n        console.error('Error getting geolocation:', error);\n        setError('Failed to retrieve geolocation.');\n        setLoading(false);\n      });\n    } else {\n      console.error('Geolocation is not available in this browser.');\n      setError('Geolocation is not supported in your browser.');\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold text-center mb-4\",\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-100 p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: [weatherData.name, \", \", weatherData.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-2\",\n        children: [\"Weather: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-2\",\n        children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-2\",\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 mb-2\",\n        children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500\",\n      children: \"Failed to fetch weather data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"5D/vak42bx6E1PZA6agARYhQL9Q=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","loading","setLoading","error","setError","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","fetch","ok","Error","data","json","name","sys","weather","main","wind","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","country","description","temp","humidity","speed","_c","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/src/components/Weather.js"],"sourcesContent":["// src/components/Weather.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Weather = () => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if geolocation is available in the browser\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition(async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        try {\r\n          // Fetch weather data using the obtained coordinates\r\n          const response = await fetch(\r\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=37de03beb6dc52637277cae0f8a8dfe1`\r\n          );\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Weather data request failed');\r\n          }\r\n\r\n          const data = await response.json();\r\n\r\n          // Check if the expected properties exist in the response\r\n          if (!data.name || !data.sys || !data.weather || !data.main || !data.wind) {\r\n            throw new Error('Weather data structure is incomplete');\r\n          }\r\n\r\n          setWeatherData(data);\r\n          setLoading(false);\r\n        } catch (error) {\r\n          console.error('Error fetching or processing weather data:', error);\r\n          setError('Failed to fetch weather data.');\r\n          setLoading(false);\r\n        }\r\n      }, (error) => {\r\n        console.error('Error getting geolocation:', error);\r\n        setError('Failed to retrieve geolocation.');\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      console.error('Geolocation is not available in this browser.');\r\n      setError('Geolocation is not supported in your browser.');\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-semibold text-center mb-4\">Weather Information</h1>\r\n      {loading ? (\r\n        <p className=\"text-center\">Loading weather data...</p>\r\n      ) : error ? (\r\n        <p className=\"text-center text-red-500\">{error}</p>\r\n      ) : weatherData ? (\r\n        <div className=\"bg-blue-100 p-6 rounded-lg shadow-lg\">\r\n          <h2 className=\"text-xl font-semibold mb-2\">{weatherData.name}, {weatherData.sys.country}</h2>\r\n          <p className=\"text-gray-700 mb-2\">Weather: {weatherData.weather[0].description}</p>\r\n          <p className=\"text-gray-700 mb-2\">Temperature: {weatherData.main.temp}Â°C</p>\r\n          <p className=\"text-gray-700 mb-2\">Humidity: {weatherData.main.humidity}%</p>\r\n          <p className=\"text-gray-700 mb-2\">Wind Speed: {weatherData.wind.speed} m/s</p>\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center text-red-500\">Failed to fetch weather data.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}