{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\src\\\\components\\\\DiseasePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiseasePrediction = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [diseaseResult, setDiseaseResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const apiKey = 'YOUR_CLARIFAI_API_KEY'; // Replace with your Clarifai API key\n\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n  };\n  const handlePrediction = async () => {\n    if (!selectedFile) {\n      alert('Please select an image first.');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n      const response = await fetch('https://your-api-url.com/predict-disease', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to predict disease.');\n      }\n      const data = await response.json();\n      if (data && data.outputs && data.outputs.length > 0) {\n        const concepts = data.outputs[0].data.concepts;\n        if (concepts && concepts.length > 0) {\n          const topPrediction = concepts[0];\n          setDiseaseResult(`Disease: ${topPrediction.name} (Confidence: ${topPrediction.value.toFixed(2)})`);\n        }\n      } else {\n        setDiseaseResult('No prediction result.');\n      }\n    } catch (error) {\n      console.error('Error predicting disease:', error);\n      setDiseaseResult('Failed to predict disease.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-200 min-h-screen flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4\",\n        children: \"Plant Disease Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".jpg\",\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-600 text-white p-3 rounded-lg w-full mt-4\",\n        onClick: handlePrediction,\n        disabled: isLoading,\n        children: isLoading ? 'Predicting...' : 'Predict Disease'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), diseaseResult && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: diseaseResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseasePrediction, \"vEQUv7BEkRCrG7xa2afx9gaI+C0=\");\n_c = DiseasePrediction;\nexport default DiseasePrediction;\nvar _c;\n$RefreshReg$(_c, \"DiseasePrediction\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DiseasePrediction","_s","selectedFile","setSelectedFile","diseaseResult","setDiseaseResult","isLoading","setIsLoading","apiKey","handleFileInputChange","e","file","target","files","handlePrediction","alert","formData","FormData","append","response","fetch","method","headers","body","ok","Error","data","json","outputs","length","concepts","topPrediction","name","value","toFixed","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/src/components/DiseasePrediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DiseasePrediction = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [diseaseResult, setDiseaseResult] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const apiKey = 'YOUR_CLARIFAI_API_KEY'; // Replace with your Clarifai API key\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handlePrediction = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select an image first.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('image', selectedFile);\r\n\r\n      const response = await fetch('https://your-api-url.com/predict-disease', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${apiKey}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to predict disease.');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data && data.outputs && data.outputs.length > 0) {\r\n        const concepts = data.outputs[0].data.concepts;\r\n        if (concepts && concepts.length > 0) {\r\n          const topPrediction = concepts[0];\r\n          setDiseaseResult(`Disease: ${topPrediction.name} (Confidence: ${topPrediction.value.toFixed(2)})`);\r\n        }\r\n      } else {\r\n        setDiseaseResult('No prediction result.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error predicting disease:', error);\r\n      setDiseaseResult('Failed to predict disease.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-blue-200 min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">Plant Disease Prediction</h2>\r\n        <input type=\"file\" accept=\".jpg\" onChange={handleFileInputChange} />\r\n        <button\r\n          className=\"bg-blue-500 hover:bg-blue-600 text-white p-3 rounded-lg w-full mt-4\"\r\n          onClick={handlePrediction}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Predicting...' : 'Predict Disease'}\r\n        </button>\r\n        {diseaseResult && (\r\n          <p className=\"mt-4\">{diseaseResult}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseasePrediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}