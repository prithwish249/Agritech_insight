{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\src\\\\CropPrediction.js\",\n  _s = $RefreshSig$();\n// src/components/CropPrediction.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropPrediction = () => {\n  _s();\n  const [ph, setPh] = useState('');\n  const [nitrogen, setNitrogen] = useState('');\n  const [phosphorus, setPhosphorus] = useState('');\n  const [potassium, setPotassium] = useState('');\n  const [hydration, setHydration] = useState('');\n  const [cropResult, setCropResult] = useState('');\n  const handleSubmit = async () => {\n    // Perform the crop prediction calculation here\n    // You can use the entered values (ph, nitrogen, phosphorus, potassium, hydration) to determine the crop\n    // Example: Call an API endpoint to get the crop prediction result\n    // const response = await axios.post('/api/crop-prediction', { ph, nitrogen, phosphorus, potassium, hydration });\n    // setCropResult(response.data.result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold\",\n      children: \"Crop Prediction Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"pH Value\",\n        value: ph,\n        onChange: e => setPh(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nitrogen Value\",\n        value: nitrogen,\n        onChange: e => setNitrogen(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Phosphorus Value\",\n        value: phosphorus,\n        onChange: e => setPhosphorus(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Potassium Value\",\n        value: potassium,\n        onChange: e => setPotassium(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Hydration Value\",\n        value: hydration,\n        onChange: e => setHydration(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(CropPrediction, \"JKm+qac3j0o1/VEm0ref8qDutYM=\");\n_c = CropPrediction;\nexport default CropPrediction;\nvar _c;\n$RefreshReg$(_c, \"CropPrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CropPrediction","_s","ph","setPh","nitrogen","setNitrogen","phosphorus","setPhosphorus","potassium","setPotassium","hydration","setHydration","cropResult","setCropResult","handleSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/src/CropPrediction.js"],"sourcesContent":["// src/components/CropPrediction.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CropPrediction = () => {\r\n  const [ph, setPh] = useState('');\r\n  const [nitrogen, setNitrogen] = useState('');\r\n  const [phosphorus, setPhosphorus] = useState('');\r\n  const [potassium, setPotassium] = useState('');\r\n  const [hydration, setHydration] = useState('');\r\n  const [cropResult, setCropResult] = useState('');\r\n\r\n  const handleSubmit = async () => {\r\n    // Perform the crop prediction calculation here\r\n    // You can use the entered values (ph, nitrogen, phosphorus, potassium, hydration) to determine the crop\r\n    // Example: Call an API endpoint to get the crop prediction result\r\n    // const response = await axios.post('/api/crop-prediction', { ph, nitrogen, phosphorus, potassium, hydration });\r\n    // setCropResult(response.data.result);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-semibold\">Crop Prediction Page</h1>\r\n      <div className=\"space-y-4\">\r\n        <input type=\"text\" placeholder=\"pH Value\" value={ph} onChange={(e) => setPh(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Nitrogen Value\" value={nitrogen} onChange={(e) => setNitrogen(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Phosphorus Value\" value={phosphorus} onChange={(e) => setPhosphorus(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Potassium Value\" value={potassium} onChange={(e) => setPotassium(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Hydration Value\" value={hydration} onChange={(e) => setHydration(e.target.value)} />\r\n        <button className=\"bg-blue-500 text-white p-2 rounded\" onClick={handleSubmit}>Submit</button>\r\n      </div>\r\n      {/* Display the crop prediction result here */}\r\n      {/* <div className=\"mt-4\">\r\n        {cropResult && <p>The recommended crop is: {cropResult}</p>}\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropPrediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}