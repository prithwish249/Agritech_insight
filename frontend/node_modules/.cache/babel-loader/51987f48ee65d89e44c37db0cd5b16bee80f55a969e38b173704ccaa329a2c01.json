{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\src\\\\components\\\\DiseasePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiseasePrediction = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n\n    // Read the selected file and convert it to a buffer\n    const data = fs.readFileSync(selectedFile);\n    try {\n      const response = await fetch('https://api-inference.huggingface.co/models/Bazaar/cv_apple_leaf_disease_detection', {\n        headers: {\n          Authorization: 'Bearer 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',\n          'Content-Type': 'image/jpeg' // Assuming it's a JPEG image\n        },\n\n        method: 'POST',\n        body: data\n      });\n      const result = await response.json();\n      setPrediction(result.predicted_class);\n      setError(''); // Reset error state on success\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to predict disease. Please try again.'); // Set error state on failure\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-blue-50  border border-black rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Disease Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpeg\",\n          onChange: handleFileChange,\n          className: \"border border-gray-300 rounded p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white py-2 px-4 ml-2 rounded\",\n          onClick: handleSubmit,\n          disabled: !selectedFile || loading,\n          children: loading ? 'Predicting...' : 'Predict'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), !error && prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-xl font-bold font-mono text-green-700\",\n          children: [\"Recommended Crop: \", prediction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center font-mono font-bold text-red-500\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseasePrediction, \"qymSLlMXpNh1MO1bXuZfvKJlcqI=\");\n_c = DiseasePrediction;\nexport default DiseasePrediction;\nvar _c;\n$RefreshReg$(_c, \"DiseasePrediction\");","map":{"version":3,"names":["React","useState","axios","fs","jsxDEV","_jsxDEV","DiseasePrediction","_s","selectedFile","setSelectedFile","prediction","setPrediction","loading","setLoading","error","setError","handleFileChange","event","target","files","handleSubmit","data","readFileSync","response","fetch","headers","Authorization","method","body","result","json","predicted_class","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/src/components/DiseasePrediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport fs from 'fs';\r\n\r\nconst DiseasePrediction = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n\r\n    // Read the selected file and convert it to a buffer\r\n    const data = fs.readFileSync(selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('https://api-inference.huggingface.co/models/Bazaar/cv_apple_leaf_disease_detection', {\r\n        headers: {\r\n          Authorization: 'Bearer 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',\r\n          'Content-Type': 'image/jpeg', // Assuming it's a JPEG image\r\n        },\r\n        method: 'POST',\r\n        body: data,\r\n      });\r\n\r\n      const result = await response.json();\r\n      setPrediction(result.predicted_class);\r\n      setError(''); // Reset error state on success\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('Failed to predict disease. Please try again.'); // Set error state on failure\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <div className=\"p-4 bg-blue-50  border border-black rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Disease Prediction</h2>\r\n        <div className=\"mb-4\">\r\n          <input type=\"file\" accept=\"image/jpeg\" onChange={handleFileChange} className=\"border border-gray-300 rounded p-2\" />\r\n          <button className=\"bg-blue-500 text-white py-2 px-4 ml-2 rounded\" onClick={handleSubmit} disabled={!selectedFile || loading}>\r\n            {loading ? 'Predicting...' : 'Predict'}\r\n          </button>\r\n        </div>\r\n        {!error && prediction && (\r\n          <div className=\"mt-4\">\r\n            <p className=\"text-center text-xl font-bold font-mono text-green-700\">\r\n              Recommended Crop: {prediction}\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Render error message if there is an error */}\r\n        {error && (\r\n          <div className=\"mt-4\">\r\n            <p className=\"text-center font-mono font-bold text-red-500\">\r\n              {error}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseasePrediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}