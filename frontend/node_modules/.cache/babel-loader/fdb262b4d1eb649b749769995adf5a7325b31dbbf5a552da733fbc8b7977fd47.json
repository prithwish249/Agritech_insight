{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\src\\\\components\\\\DiseasePrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiseasePrediction = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [prediction, setPrediction] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post('YOUR_API_ENDPOINT', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPrediction(response.data.prediction);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg\",\n        onChange: handleFileChange,\n        className: \"border border-gray-300 rounded p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white py-2 px-4 ml-2 rounded\",\n        onClick: handleSubmit,\n        disabled: !selectedFile || loading,\n        children: loading ? 'Predicting...' : 'Predict'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold\",\n        children: \"Prediction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseasePrediction, \"H4u3/l6vnfspEW95c5MdbtzcXPM=\");\n_c = DiseasePrediction;\nexport default DiseasePrediction;\nvar _c;\n$RefreshReg$(_c, \"DiseasePrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DiseasePrediction","_s","selectedFile","setSelectedFile","prediction","setPrediction","loading","setLoading","handleFileChange","event","target","files","handleSubmit","formData","FormData","append","response","post","headers","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/src/components/DiseasePrediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DiseasePrediction = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post('YOUR_API_ENDPOINT', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setPrediction(response.data.prediction);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-white rounded-lg shadow-lg\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Disease Prediction</h2>\r\n      <div className=\"mb-4\">\r\n        <input type=\"file\" accept=\"image/jpeg\" onChange={handleFileChange} className=\"border border-gray-300 rounded p-2\" />\r\n        <button className=\"bg-blue-500 text-white py-2 px-4 ml-2 rounded\" onClick={handleSubmit} disabled={!selectedFile || loading}>\r\n          {loading ? 'Predicting...' : 'Predict'}\r\n        </button>\r\n      </div>\r\n      {prediction && (\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold\">Prediction:</h3>\r\n          <p>{prediction}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiseasePrediction;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}