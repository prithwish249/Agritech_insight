{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prithhish\\\\Desktop\\\\agritech\\\\frontend\\\\src\\\\components\\\\Routes.js\";\n// src/components/Routes.js\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Weather from \"./Weather\";\nimport CropPrediction from \"./CropPrediction\";\nimport FertilizerPrediction from \"./FertilizerPrediction\";\nimport DiseasePrediction from \"./DiseasePrediction\";\nimport Login from \"./Login\";\n\n// Mock authentication status for demonstration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Logic to check if the user is authenticated\n  // You might use state, context, or localStorage to store authentication status\n  return localStorage.getItem(\"authToken\") !== null; // Example: Check if auth token exists\n};\n\nconst ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nconst AppRoutes = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/weather\",\n        element: Weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/crop-prediction\",\n        element: CropPrediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/fertilizer-prediction\",\n        element: FertilizerPrediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/disease-prediction\",\n        element: DiseasePrediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AppRoutes;\nexport default AppRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"AppRoutes\");","map":{"version":3,"names":["React","BrowserRouter","Route","Routes","Navigate","Navbar","Home","Weather","CropPrediction","FertilizerPrediction","DiseasePrediction","Login","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","ProtectedRoute","element","Component","rest","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","AppRoutes","children","path","_c2","$RefreshReg$"],"sources":["C:/Users/Prithhish/Desktop/agritech/frontend/src/components/Routes.js"],"sourcesContent":["// src/components/Routes.js\r\nimport React from \"react\";\r\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport Weather from \"./Weather\";\r\nimport CropPrediction from \"./CropPrediction\";\r\nimport FertilizerPrediction from \"./FertilizerPrediction\";\r\nimport DiseasePrediction from \"./DiseasePrediction\";\r\nimport Login from \"./Login\";\r\n\r\n// Mock authentication status for demonstration\r\nconst isAuthenticated = () => {\r\n  // Logic to check if the user is authenticated\r\n  // You might use state, context, or localStorage to store authentication status\r\n  return localStorage.getItem(\"authToken\") !== null; // Example: Check if auth token exists\r\n};\r\n\r\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={isAuthenticated() ? <Component /> : <Navigate to=\"/login\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        {/* Use ProtectedRoute for protected routes */}\r\n        <ProtectedRoute path=\"/weather\" element={Weather} />\r\n        <ProtectedRoute path=\"/crop-prediction\" element={CropPrediction} />\r\n        <ProtectedRoute\r\n          path=\"/fertilizer-prediction\"\r\n          element={FertilizerPrediction}\r\n        />\r\n        <ProtectedRoute\r\n          path=\"/disease-prediction\"\r\n          element={DiseasePrediction}\r\n        />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}